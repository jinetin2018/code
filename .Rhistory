setwd("D:/2017桌面文件资料/201801月资料/201712宽带沉默用户")
setwd("D:/2017桌面文件资料/201801月资料/201712宽带沉默用户")
chenmo <- read.table("ChenMo201712.csv",sep = ",",quote = "\"",header = TRUE)
mingxi <- read.table("20180110111805-单宽用户明细.csv",sep = ",",quote = "\"",header = TRUE,skip = 4,nrows = 536641)
View(chenmo)
#chenmo_true <- data.frame(chenmo$用户编号)
#chenmo_true$类型 <- "沉默"
#names(chenmo_true)[1] <- "用户编号"
mingxi <- merge(mingxi,chenmo,by="用户编号",all.x = TRUE,all.y=TRUE)
write.table(mingxi,"chenmo_list.csv",sep = ",",quote = TRUE,col.names = TRUE,row.names = FALSE)
table(mingxi$是否计费到达,mingxi$是否计费流失)
table(mingxi$是否计费到达,mingxi$是否计费流失,useNA="always")
library(string)
library(strings)
library(stringr)
library(dplyr)        #数据处理
library(data.table)
#library(lubridate)   #日期快速处理
#library(readr)       #快速读取数据
#library(magrittr)  #管道操作
#library(zoo)    #时间格式预处理
#library(xts)    #扩展时间序列,时间格式预处理
#library(TTR)
#library(quantmod)   #金融数据读取与画图
#library(formatR)   #formatR包是一个实用的包，提供了R代码格式化功能，自动设置空格、缩进、换行等代码格式，让代码看起来更友好。
#library(readxl)
#library("fortunes")  #fortunes库是一个R语言的语录集，截止到2012年4月，一共总结了316条R-help的留言，这些都是R语言智慧的精华。让R语言的后辈使用者，可以更了解R语言的本身，了解R的精神。
library(stringr)
Tele<-read.table("clipboard",sep = "\t",header = TRUE)
Tele$月份<-factor(Tele$月份)
Tele_melt<-melt(Tele)
Tele_cast<-dcast(Tele_melt,年度+月份+指标名称+variable~公司,sum)
#Tele_cast<-Tele_cast[c(-5,-7)]
write.table(Tele_cast,"clipboard",sep = ",",quote = TRUE,col.names = TRUE,row.names = FALSE)
Tele_melt<-melt(Tele)
Tele_cast<-dcast(Tele_melt,年度+月份+指标名称+variable~公司,sum)
Tele<-read.table("clipboard",sep = "\t",header = TRUE)
Tele$月份<-factor(Tele$月份)
Tele_melt<-melt(Tele)
Tele_cast<-dcast(Tele_melt,年度+月份+指标名称+variable~公司,sum)
#Tele_cast<-Tele_cast[c(-5,-7)]
write.table(Tele_cast,"clipboard",sep = ",",quote = TRUE,col.names = TRUE,row.names = FALSE)
View(mobile)
install.packages(c("arules", "backports", "BH", "bindr", "curl", "DBI", "dbplyr", "dendextend", "devtools", "digest", "DT", "foreach", "fpc", "git2r", "hexbin", "hms", "htmlwidgets", "httpuv", "igraph", "irlba", "iterators", "knitr", "lubridate", "mvtnorm", "NMF", "odbc", "openair", "openssl", "packrat", "pbapply", "pbdZMQ", "PerformanceAnalytics", "quantmod", "Rcpp", "RCurl", "registry", "reshape2", "RGtk2", "rlang", "rmarkdown", "rprojroot", "rsconnect", "scatterplot3d", "seriation", "slam", "sparklyr", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tm", "TTR", "vcd", "viridis", "viridisLite", "visNetwork", "withr", "wordcloud2", "XML", "xml2", "xts", "yaml", "zoo"))
install.packages(c("arules", "backports", "BH", "bindr", "curl", "DBI", "dbplyr", "dendextend", "devtools", "digest", "DT", "foreach", "fpc", "git2r", "hexbin", "hms", "htmlwidgets", "httpuv", "igraph", "irlba", "iterators", "knitr", "lubridate", "mvtnorm", "NMF", "odbc", "openair", "openssl", "packrat", "pbapply", "pbdZMQ", "PerformanceAnalytics", "quantmod", "Rcpp", "RCurl", "registry", "reshape2", "RGtk2", "rlang", "rmarkdown", "rprojroot", "rsconnect", "scatterplot3d", "seriation", "slam", "sparklyr", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tm", "TTR", "vcd", "viridis", "viridisLite", "visNetwork", "withr", "wordcloud2", "XML", "xml2", "xts", "yaml", "zoo"))
install.packages(c("arules", "backports", "BH", "bindr", "curl", "DBI", "dbplyr", "dendextend", "devtools", "digest", "DT", "foreach", "fpc", "git2r", "hexbin", "hms", "htmlwidgets", "httpuv", "igraph", "irlba", "iterators", "knitr", "lubridate", "mvtnorm", "NMF", "odbc", "openair", "openssl", "packrat", "pbapply", "pbdZMQ", "PerformanceAnalytics", "quantmod", "Rcpp", "RCurl", "registry", "reshape2", "RGtk2", "rlang", "rmarkdown", "rprojroot", "rsconnect", "scatterplot3d", "seriation", "slam", "sparklyr", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tm", "TTR", "vcd", "viridis", "viridisLite", "visNetwork", "withr", "wordcloud2", "XML", "xml2", "xts", "yaml", "zoo"))
install.packages(c("arules", "backports", "BH", "bindr", "curl", "DBI", "dbplyr", "dendextend", "devtools", "digest", "DT", "foreach", "fpc", "git2r", "hexbin", "hms", "htmlwidgets", "httpuv", "igraph", "irlba", "iterators", "knitr", "lubridate", "mvtnorm", "NMF", "odbc", "openair", "openssl", "packrat", "pbapply", "pbdZMQ", "PerformanceAnalytics", "quantmod", "Rcpp", "RCurl", "registry", "reshape2", "RGtk2", "rlang", "rmarkdown", "rprojroot", "rsconnect", "scatterplot3d", "seriation", "slam", "sparklyr", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tm", "TTR", "vcd", "viridis", "viridisLite", "visNetwork", "withr", "wordcloud2", "XML", "xml2", "xts", "yaml", "zoo"))
install.packages(c("arules", "backports", "BH", "bindr", "curl", "DBI", "dbplyr", "dendextend", "devtools", "digest", "DT", "foreach", "fpc", "git2r", "hexbin", "hms", "htmlwidgets", "httpuv", "igraph", "irlba", "iterators", "knitr", "lubridate", "mvtnorm", "NMF", "odbc", "openair", "openssl", "packrat", "pbapply", "pbdZMQ", "PerformanceAnalytics", "quantmod", "Rcpp", "RCurl", "registry", "reshape2", "RGtk2", "rlang", "rmarkdown", "rprojroot", "rsconnect", "scatterplot3d", "seriation", "slam", "sparklyr", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tm", "TTR", "vcd", "viridis", "viridisLite", "visNetwork", "withr", "wordcloud2", "XML", "xml2", "xts", "yaml", "zoo"))
restart
install.packages("yaml")
library(yaml)
library(MASS)
data(iris)
iris.lda=lda(Species~.,data=iris)
head(iris)
table(Species,predict(iris.lda,iris)$class)
table(Species,predict(iris.lda,iris)$class)
table(iris$Species,predict(iris.lda,iris)$class)
predict(iris.lda,iris)
s <- predict(iris.lda,iris)
s
str(s)
s$class[5]
iris.lda
x <- c("01/02/1968","03/04/1970")
x
x1 <- as.Date(x,"m%/%d/%y")
x1
x1 <- as.Date(x,"m%/%d/%Y")
x1
x1 <- as.Date(x,"%m/%d/%y")
x1
x1 <- as.Date(x,"%m/%d/%Y")
x1
# 一、处理月度快报数据 --------------------------------------------------------------------
setwd("D:/R/quickreport/month_report")
library(ggplot2)   #图形处理
library(dplyr)        #数据处理
library(data.table)
#library(tidyr)
library(lubridate)   #日期快速处理
library(xts)    #扩展时间序列,时间格式预处理
library(formatR)   #formatR包是一个实用的包，提供了R代码格式化功能，自动设置空格、缩进、换行等代码格式，让代码看起来更友好。
library(formatR)   #formatR包是一个实用的包，提供了R代码格式化功能，自动设置空格、缩进、换行等代码格式，让代码看起来更友好。
library(readxl)
#mobile<-read.table("201804月度快报报表（统计表）.csv",sep=",",encoding="GBK",skip=4,header=TRUE)
# facotr转为数值变为0，1，2，序列。必须先转为numerical再转为数值。
mobile <- fread("201804月度快报报表（统计表）.csv",sep=",",skip=4,header=TRUE,colClasses=c(rep("factor",45),rep("numeric",19)))
#mobile<-read.table("201804月度快报报表（统计表）.csv",sep=",",encoding="GBK",skip=4,header=TRUE)
# facotr转为数值变为0，1，2，序列。必须先转为numerical再转为数值。
mobile <- fread("201804月度快报报表（统计表）.csv",sep=",",skip=4,header=TRUE,colClasses=c(rep("factor",45),rep("numeric",19)))
mobile[,46:64] <- lapply(mobile[,46:64], as.numeric)
library(ggplot2)   #图形处理
library(dplyr)        #数据处理
library(data.table)
#library(tidyr)
library(lubridate)   #日期快速处理
library(readr)       #快速读取数据
library(magrittr)  #管道操作
library(zoo)    #时间格式预处理
library(xts)    #扩展时间序列,时间格式预处理
library(TTR)
library(quantmod)   #金融数据读取与画图
library(formatR)   #formatR包是一个实用的包，提供了R代码格式化功能，自动设置空格、缩进、换行等代码格式，让代码看起来更友好。
library(readxl)
library("fortunes")  #fortunes库是一个R语言的语录集，截止到2012年4月，一共总结了316条R-help的留言，这些都是R语言智慧的精华。让R语言的后辈使用者，可以更了解R语言的本身，了解R的精神。
library(stringr)
#library(openair)   #openair空气质量监控
# 一、处理月度快报数据 --------------------------------------------------------------------
#setwd("D:/R/quickreport/month_report")
#mobile<-read.table("201804月度快报报表（统计表）.csv",sep=",",encoding="GBK",skip=4,header=TRUE)
# facotr转为数值变为0，1，2，序列。必须先转为numerical再转为数值。
mobile <- fread("201804月度快报报表（统计表）.csv",sep=",",skip=4,header=TRUE,colClasses=c(rep("factor",45),rep("numeric",19)))
mobile[,46:64] <- lapply(mobile[,46:64], as.numeric)
#mobile<-data.table(mobile)
#names(mobile)[12] <- "部门一级"
# ~~~~定义维度 --------------------------------------------------------------------
#定义维度统计函数，移动指标统计
宽带20M<<-c("1000M","100M","1024M","1400M","2000M","200M","20M","24M","300M","30M","350M","40M","500M","50M","600M","80M")
宽带50M<<-c("1000M","100M","1024M","1400M","2000M","200M","300M","350M","500M","50M","600M","80M")
宽带100M<<-c("1000M","100M","1024M","1400M","2000M","200M","300M","350M","500M","600M")
宽带8M<-c("0.5M","1M","2M","3M","4M","6M","8M")
宽带200M<<-c("1000M","1024M","1400M","2000M","200M","300M","350M","500M","600M")
宽带20M以下<-c("0.5M","1M","2M","3M","4M","6M","8M","10M","12M","15M")
天翼高清产品<-c("天翼高清超值版","天翼高清简约版","天翼高清融合超值版","天翼高清融合简约版","天翼高清融合尊享版A","天翼高清融合尊享版B","天翼高清尊享版")
IPTV产品<-c("政企IPTV","IPTV")
智慧家庭产品<-c("智慧家庭(100M标准版)","智慧家庭(100M手机版)","智慧家庭(50M标准版)","智慧家庭(50M手机版)","智慧家庭产品")
# ~~~~定义函数report_mobile -------------------------------------------------------
#  地市、细分市场、部门一级、销售点一级、城乡标识作为有排序的factor
mobile$细分市场<-factor(mobile$细分市场,order = TRUE,levels = c("行业市场","商业市场","高校市场","中小市场","家客市场 ","城市市场","农村市场"))
mobile$部门一级<-factor(mobile$部门一级,order = TRUE,levels = c("政企","实体","电子","未知"))
mobile$渠道视图_销售点一级<-factor(mobile$渠道视图_销售点一级,order = TRUE,levels = c("直销渠道","实体渠道","电子渠道","未知"))
mobile$城乡标识<-factor(mobile$城乡标识,order = TRUE,levels = c("城市","农村"))
mobile$用户类型<-factor(mobile$用户类型,order=TRUE,levels = c("普通用户","VPN客户","大客户","公免用户","测试用户"))
mobile$ARPU分档 <- factor(mobile$ARPU分档,order=TRUE,levels = c("(0-10元]","(10-20元]","(20-30元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]","(100-150元]","(150-200元]","(200-500元]","(500-1000元]","1000元以上"))
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
mobile$区县分类 <- mobile$经分区县
mobile[地市 == "长春" & 城乡标识 == "城市"]$区县分类 <- "长春市区"
mobile[地市 == "吉林" & 城乡标识 == "城市"]$区县分类 <- "吉林市区"
mobile[地市 == "延边" & 城乡标识 == "城市"]$区县分类 <- "延边市区"
mobile[地市 == "四平" & 城乡标识 == "城市"]$区县分类 <- "四平市区"
mobile[地市 == "通化" & 城乡标识 == "城市"]$区县分类 <- "通化市区"
mobile[地市 == "白城" & 城乡标识 == "城市"]$区县分类 <- "白城市区"
mobile[地市 == "辽源" & 城乡标识 == "城市"]$区县分类 <- "辽源市区"
mobile[地市 == "松原" & 城乡标识 == "城市"]$区县分类 <- "松原市区"
mobile[地市 == "白山" & 城乡标识 == "城市"]$区县分类 <- "白山市区"
mobile$区县分类 <- factor(mobile$区县分类,order=TRUE,
levels = c("长春市区","德惠市","九台市","农安县","双阳区","榆树市",
"吉林市区","磐石市","舒兰市","永吉县","桦甸市","蛟河市",
"延边市区","敦化市","和龙市","龙井市","图们","汪清县","安图县","珲春市",
"四平市区","梨树县","双辽市","公主岭市","伊通满族自治县",
"通化市区","集安市","柳河县","梅河口市","辉南县","通化县",
"白城市区","白城.大安","白城.通榆","白城.镇赉","白城.洮南",
"辽源市区","东辽县","东丰县",
"松原市区","扶余县","乾安县","长岭县",
"白山市区","江源区","临江市","抚松县","靖宇县","长白朝鲜族自治县"))
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under1000 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]",
"(70-80元]","(80-100元]")
arpu_up1000 <- c("1000元以上","(500-1000元]")
mobile_under1000 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_under1000,
.(arpu1000以内出账数=sum(集团出账用户数,na.rm=T),arpu1000以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up1000 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_up1000,
.(arpu1000以上出账数=sum(集团出账用户数,na.rm=T),arpu1000以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under1000,mobile_up1000,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
levels(mobile$业务类型)
library(ggplot2)   #图形处理
library(dplyr)        #数据处理
library(data.table)
#library(tidyr)
library(lubridate)   #日期快速处理
library(readr)       #快速读取数据
library(magrittr)  #管道操作
library(zoo)    #时间格式预处理
library(xts)    #扩展时间序列,时间格式预处理
library(TTR)
library(quantmod)   #金融数据读取与画图
library(formatR)   #formatR包是一个实用的包，提供了R代码格式化功能，自动设置空格、缩进、换行等代码格式，让代码看起来更友好。
library(readxl)
library("fortunes")  #fortunes库是一个R语言的语录集，截止到2012年4月，一共总结了316条R-help的留言，这些都是R语言智慧的精华。让R语言的后辈使用者，可以更了解R语言的本身，了解R的精神。
library(stringr)
#library(openair)   #openair空气质量监控
# 一、处理月度快报数据 --------------------------------------------------------------------
#setwd("D:/R/quickreport/month_report")
#mobile<-read.table("201804月度快报报表（统计表）.csv",sep=",",encoding="GBK",skip=4,header=TRUE)
# facotr转为数值变为0，1，2，序列。必须先转为numerical再转为数值。
mobile <- fread("201804月度快报报表（统计表）.csv",sep=",",skip=4,header=TRUE,colClasses=c(rep("factor",46),rep("numeric",19)))
mobile[,47:65] <- lapply(mobile[,47:65], as.numeric)
#mobile<-data.table(mobile)
#names(mobile)[12] <- "部门一级"
# ~~~~定义维度 --------------------------------------------------------------------
#定义维度统计函数，移动指标统计
宽带20M<<-c("1000M","100M","1024M","1400M","2000M","200M","20M","24M","300M","30M","350M","40M","500M","50M","600M","80M")
宽带50M<<-c("1000M","100M","1024M","1400M","2000M","200M","300M","350M","500M","50M","600M","80M")
宽带100M<<-c("1000M","100M","1024M","1400M","2000M","200M","300M","350M","500M","600M")
宽带8M<-c("0.5M","1M","2M","3M","4M","6M","8M")
宽带200M<<-c("1000M","1024M","1400M","2000M","200M","300M","350M","500M","600M")
宽带20M以下<-c("0.5M","1M","2M","3M","4M","6M","8M","10M","12M","15M")
天翼高清产品<-c("天翼高清超值版","天翼高清简约版","天翼高清融合超值版","天翼高清融合简约版","天翼高清融合尊享版A","天翼高清融合尊享版B","天翼高清尊享版")
IPTV产品<-c("政企IPTV","IPTV")
智慧家庭产品<-c("智慧家庭(100M标准版)","智慧家庭(100M手机版)","智慧家庭(50M标准版)","智慧家庭(50M手机版)","智慧家庭产品")
# ~~~~定义函数report_mobile -------------------------------------------------------
#  地市、细分市场、部门一级、销售点一级、城乡标识作为有排序的factor
mobile$细分市场<-factor(mobile$细分市场,order = TRUE,levels = c("行业市场","商业市场","高校市场","中小市场","家客市场 ","城市市场","农村市场"))
mobile$部门一级<-factor(mobile$部门一级,order = TRUE,levels = c("政企","实体","电子","未知"))
mobile$渠道视图_销售点一级<-factor(mobile$渠道视图_销售点一级,order = TRUE,levels = c("直销渠道","实体渠道","电子渠道","未知"))
mobile$城乡标识<-factor(mobile$城乡标识,order = TRUE,levels = c("城市","农村"))
mobile$用户类型<-factor(mobile$用户类型,order=TRUE,levels = c("普通用户","VPN客户","大客户","公免用户","测试用户"))
mobile$ARPU分档 <- factor(mobile$ARPU分档,order=TRUE,levels = c("(0-10元]","(10-20元]","(20-30元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]","(100-150元]","(150-200元]","(200-500元]","(500-1000元]","1000元以上"))
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
mobile$区县分类 <- mobile$经分区县
mobile[地市 == "长春" & 城乡标识 == "城市"]$区县分类 <- "长春市区"
mobile[地市 == "吉林" & 城乡标识 == "城市"]$区县分类 <- "吉林市区"
mobile[地市 == "延边" & 城乡标识 == "城市"]$区县分类 <- "延边市区"
mobile[地市 == "四平" & 城乡标识 == "城市"]$区县分类 <- "四平市区"
mobile[地市 == "通化" & 城乡标识 == "城市"]$区县分类 <- "通化市区"
mobile[地市 == "白城" & 城乡标识 == "城市"]$区县分类 <- "白城市区"
mobile[地市 == "辽源" & 城乡标识 == "城市"]$区县分类 <- "辽源市区"
mobile[地市 == "松原" & 城乡标识 == "城市"]$区县分类 <- "松原市区"
mobile[地市 == "白山" & 城乡标识 == "城市"]$区县分类 <- "白山市区"
mobile$区县分类 <- factor(mobile$区县分类,order=TRUE,
levels = c("长春市区","德惠市","九台市","农安县","双阳区","榆树市",
"吉林市区","磐石市","舒兰市","永吉县","桦甸市","蛟河市",
"延边市区","敦化市","和龙市","龙井市","图们","汪清县","安图县","珲春市",
"四平市区","梨树县","双辽市","公主岭市","伊通满族自治县",
"通化市区","集安市","柳河县","梅河口市","辉南县","通化县",
"白城市区","白城.大安","白城.通榆","白城.镇赉","白城.洮南",
"辽源市区","东辽县","东丰县",
"松原市区","扶余县","乾安县","长岭县",
"白山市区","江源区","临江市","抚松县","靖宇县","长白朝鲜族自治县"))
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under1000 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]",
"(70-80元]","(80-100元]")
arpu_up1000 <- c("1000元以上","(500-1000元]")
mobile_under1000 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_under1000,
.(arpu1000以内出账数=sum(集团出账用户数,na.rm=T),arpu1000以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up1000 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_up1000,
.(arpu1000以上出账数=sum(集团出账用户数,na.rm=T),arpu1000以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under1000,mobile_up1000,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
levels(mobile$是否互联网专线)
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under500 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]")
arpu_up500 <- c("1000元以上","(500-1000元]")
mobile_under1000 <- mobile[是否A口径出账=="是" & (业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_under500,
.(arpu500以内出账数=sum(集团出账用户数,na.rm=T),arpu500以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up500 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_up500,
.(arpu500以上出账数=sum(集团出账用户数,na.rm=T),arpu500以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under500,mobile_up500,by="地市")
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under500 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]")
arpu_up500 <- c("1000元以上","(500-1000元]")
mobile_under500 <- mobile[是否A口径出账=="是" & (业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_under500,
.(arpu500以内出账数=sum(集团出账用户数,na.rm=T),arpu500以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up500 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_up500,
.(arpu500以上出账数=sum(集团出账用户数,na.rm=T),arpu500以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under500,mobile_up500,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under500 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]",
"(70-80元]","(80-100元]")
arpu_up500 <- c("1000元以上","(500-1000元]")
mobile_under500 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_under500,
.(arpu500以内计费=sum(计费到达用户数,na.rm=T),arpu500以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up500 <- mobile[是否A口径出账=="是" & (业务类型=="CDMA后付" | 业务类型=="CDMA智能预付") & ARPU分档 %in% arpu_up500,
.(arpu500以上计费=sum(计费到达用户数,na.rm=T),arpu500以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under500,mobile_up500,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under500 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]")
arpu_up500 <- c("1000元以上","(500-1000元]")
mobile_under500 <- mobile[(业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_under500,
.(arpu500以内出账数=sum(计费到达用户数,na.rm=T),arpu500以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up500 <- mobile[(业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_up500,
.(arpu500以上出账数=sum(计费到达用户数,na.rm=T),arpu500以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under500,mobile_up500,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under500 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]")
arpu_up500 <- c("1000元以上","(500-1000元]")
mobile_under500 <- mobile[(业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_under500,
.(arpu500以内出账数=sum(计费到达用户数,na.rm=T),arpu500以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up500 <- mobile[(业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_up500,
.(arpu500以上出账数=sum(计费到达用户数,na.rm=T),arpu500以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under500,mobile_up500,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
#mobile<-read.table("201804月度快报报表（统计表）.csv",sep=",",encoding="GBK",skip=4,header=TRUE)
# facotr转为数值变为0，1，2，序列。必须先转为numerical再转为数值。
mobile <- fread("201804月度快报报表（统计表）.csv",sep=",",skip=4,header=TRUE,colClasses=c(rep("factor",46),rep("numeric",19)))
mobile[,47:65] <- lapply(mobile[,47:65], as.numeric)
class(mobile)
str(mobile)
mobile$地市<-factor(mobile$地市,order = TRUE,levels = c("长春","吉林","延边","四平","通化","白城","辽源","松原","白山"))
arpu_under500 <-c("(0-10元]","(10-20元]","(100-150元]","(150-200元]","(20-30元]","(200-500元]","(30-40元]","(40-50元]","(50-60元]","(60-70元]","(70-80元]","(80-100元]")
arpu_up500 <- c("1000元以上","(500-1000元]")
mobile_under500 <- mobile[(业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_under500,
.(arpu500以内出账数=sum(计费到达用户数,na.rm=T),arpu500以内出账收入=sum(出账收入,na.rm=T)),by="地市"]
mobile_up500 <- mobile[(业务类型=="互联网业务" & 是否互联网专线=="否") & ARPU分档 %in% arpu_up500,
.(arpu500以上出账数=sum(计费到达用户数,na.rm=T),arpu500以上出账收入=sum(出账收入,na.rm=T)),by="地市"]
result <- merge(mobile_under500,mobile_up500,by="地市")
write.table(result,"clipboard",row.names = FALSE,col.names = TRUE,sep = ",",quote = TRUE)
setwd("D:/R/github")
library(stringr)
x <- read.table("clipboard",header = TRUE,sep = "\t")
x$地市 <- str_sub(x$名称,,2)
View(x)
names(x)
names(x)[1] <- "名称"
x$地市 <- str_sub(x$名称,,2)
x$地市[x$地市 %in% c("政企","省级","渠道")] <-"长春"
x$地市[x$地市 %in% c("长山","扶余")] <- "松原"
x$市县 <- "市区"
city_name <-c("德惠","九台","农安","双阳","榆树","磐石","舒兰","永吉","桦甸","蛟河","敦化","和龙",
"龙井","图们","汪清","安图","珲春","梨树","双辽","公主岭","伊通","集安","柳河","梅河",
"辉南","通化县","大安","通榆","镇赉","洮南","东辽","东丰","扶余","乾安","长岭","江源",
"临江","抚松","靖宇","长白")
for (data_name in city_name)  {x$市县[str_detect(x$名称,data_name)] <- data_name}
x$级别[str_detect(x$名称,"一级")] <-"一级网格"
x$级别[str_detect(x$名称,"二级")] <-"二级网格"
write.table(x,"clipboard",sep = ",",col.names = TRUE,row.names = FALSE)
